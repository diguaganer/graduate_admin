<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cc.niushuai.graduate.mapper.SysJobMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cc.niushuai.graduate.entity.SysJob" id="sysJobMap">
        <result property="id" column="id"/>
        <result property="jobName" column="job_name"/>
        <result property="cron" column="cron"/>
        <result property="started" column="started"/>
        <result property="recycle" column="recycle"/>
        <result property="clazzPath" column="clazz_path"/>
        <result property="jobDesc" column="job_desc"/>
        <result property="state" column="state"/>
        <result property="createDate" column="CREATE_DATE"/>
        <result property="updateDate" column="UPDATE_DATE"/>
        <result property="createBy" column="CREATE_BY"/>
        <result property="updateBy" column="UPDATE_BY"/>
    </resultMap>

    <select id="get" resultType="cc.niushuai.graduate.entity.SysJob">
		select * from admin_sys_job where id = #{value}
	</select>

    <select id="getList" resultType="cc.niushuai.graduate.entity.SysJob">
        select * from admin_sys_job t
        <include refid="where_clause"/>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="getCount" resultType="int">
        select count(*) from admin_sys_job t
        <include refid="where_clause"/>
    </select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="id != null and id != ''">and t.id = #{id}</if>
            <if test="idVague != null and idVague != ''">and t.id like concat('%',#{idVague},'%')</if>
            <if test="jobName != null and jobName != ''">and t.job_name = #{jobName}</if>
            <if test="jobNameVague != null and jobNameVague != ''">and t.job_name like concat('%',#{jobNameVague},'%')
            </if>
            <if test="cron != null and cron != ''">and t.cron = #{cron}</if>
            <if test="cronVague != null and cronVague != ''">and t.cron like concat('%',#{cronVague},'%')</if>
            <if test="started != null and started != ''">and t.started = #{started}</if>
            <if test="startedVague != null and startedVague != ''">and t.started like concat('%',#{startedVague},'%')
            </if>
            <if test="recycle != null and recycle != ''">and t.recycle = #{recycle}</if>
            <if test="recycleVague != null and recycleVague != ''">and t.recycle like concat('%',#{recycleVague},'%')
            </if>
            <if test="clazzPath != null and clazzPath != ''">and t.clazz_path = #{clazzPath}</if>
            <if test="clazzPathVague != null and clazzPathVague != ''">and t.clazz_path like
                concat('%',#{clazzPathVague},'%')
            </if>
            <if test="jobDesc != null and jobDesc != ''">and t.job_desc = #{jobDesc}</if>
            <if test="jobDescVague != null and jobDescVague != ''">and t.job_desc like concat('%',#{jobDescVague},'%')
            </if>
            <if test="state != null and state != ''">and t.state = #{state}</if>
            <if test="stateVague != null and stateVague != ''">and t.state like concat('%',#{stateVague},'%')</if>
            <if test="createDate != null and createDate != ''">and t.CREATE_DATE = #{createDate}</if>
            <if test="createDateVague != null and createDateVague != ''">and t.CREATE_DATE like
                concat('%',#{createDateVague},'%')
            </if>
            <if test="updateDate != null and updateDate != ''">and t.UPDATE_DATE = #{updateDate}</if>
            <if test="updateDateVague != null and updateDateVague != ''">and t.UPDATE_DATE like
                concat('%',#{updateDateVague},'%')
            </if>
            <if test="createBy != null and createBy != ''">and t.CREATE_BY = #{createBy}</if>
            <if test="createByVague != null and createByVague != ''">and t.CREATE_BY like
                concat('%',#{createByVague},'%')
            </if>
            <if test="updateBy != null and updateBy != ''">and t.UPDATE_BY = #{updateBy}</if>
            <if test="updateByVague != null and updateByVague != ''">and t.UPDATE_BY like
                concat('%',#{updateByVague},'%')
            </if>
        </where>
    </sql>

    <insert id="save" parameterType="cc.niushuai.graduate.entity.SysJob" useGeneratedKeys="true" keyProperty="id">
		insert into admin_sys_job
		(
			`job_name`, 
			`cron`, 
			`started`, 
			`recycle`, 
			`clazz_path`, 
			`job_desc`, 
			`state`, 
			`CREATE_DATE`, 
			`UPDATE_DATE`, 
			`CREATE_BY`, 
			`UPDATE_BY`
		)
		values
		(
			#{jobName}, 
			#{cron}, 
			#{started}, 
			#{recycle}, 
			#{clazzPath}, 
			#{jobDesc}, 
			#{state}, 
			#{createDate}, 
			#{updateDate}, 
			#{createBy}, 
			#{updateBy}
		)
	</insert>

    <update id="update" parameterType="cc.niushuai.graduate.entity.SysJob">
        update admin_sys_job
        <set>
            <if test="jobName != null">`job_name` = #{jobName},</if>
            <if test="cron != null">`cron` = #{cron},</if>
            <if test="started != null">`started` = #{started},</if>
            <if test="recycle != null">`recycle` = #{recycle},</if>
            <if test="clazzPath != null">`clazz_path` = #{clazzPath},</if>
            <if test="jobDesc != null">`job_desc` = #{jobDesc},</if>
            <if test="state != null">`state` = #{state},</if>
            <if test="createDate != null">`CREATE_DATE` = #{createDate},</if>
            <if test="updateDate != null">`UPDATE_DATE` = #{updateDate},</if>
            <if test="createBy != null">`CREATE_BY` = #{createBy},</if>
            <if test="updateBy != null">`UPDATE_BY` = #{updateBy}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from admin_sys_job where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from admin_sys_job where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>