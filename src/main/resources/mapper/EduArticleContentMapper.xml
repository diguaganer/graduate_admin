<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cc.niushuai.graduate.mapper.EduArticleContentMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="cc.niushuai.graduate.entity.EduArticleContent" id="eduArticleContentMap">
        <result property="articleId" column="ARTICLE_ID"/>
        <result property="content" column="CONTENT"/>
    </resultMap>

	<select id="get" resultType="cc.niushuai.graduate.entity.EduArticleContent">
		select * from edu_article_content where ARTICLE_ID = #{value}
	</select>

	<select id="getList" resultType="cc.niushuai.graduate.entity.EduArticleContent">
		select * from edu_article_content t <include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by ARTICLE_ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from edu_article_content t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="articleId != null and articleId != ''"> and t.ARTICLE_ID = #{articleId} </if>
    		<if test="articleIdVague != null and articleIdVague != ''"> and t.ARTICLE_ID like concat('%',#{articleIdVague},'%') </if>
            <if test="content != null and content != ''"> and t.CONTENT = #{content} </if>
    		<if test="contentVague != null and contentVague != ''"> and t.CONTENT like concat('%',#{contentVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="cc.niushuai.graduate.entity.EduArticleContent">
		insert into edu_article_content
		(
			`ARTICLE_ID`, 
			`CONTENT`
		)
		values
		(
			#{articleId}, 
			#{content}
		)
	</insert>

	<update id="update" parameterType="cc.niushuai.graduate.entity.EduArticleContent">
		update edu_article_content 
		<set>
			<if test="content != null">`CONTENT` = #{content}</if>
		</set>
		where ARTICLE_ID = #{articleId}
	</update>
	
	<delete id="delete">
		delete from edu_article_content where ARTICLE_ID = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from edu_article_content where ARTICLE_ID in 
		<foreach item="articleId" collection="array" open="(" separator="," close=")">
			#{articleId}
		</foreach>
	</delete>

</mapper>